# -*- coding: utf-8 -*-
"""Datasexp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uiFuxpbYbAi4czNRuxDXc5tMvOLt_Ti5
"""

import astropy.io.fits as fits
import numpy as np
import json

def load(file_path):
    archivo_fits = fits.open(file_path)
    datos_imagen = archivo_fits[0].data
    archivo_fits.close()
    return datos_imagen

def divide_image(image_data, divisiones=8):
    height, width = image_data.shape
    cell_size_y = height // divisiones
    cell_size_x = width // divisiones
    cell_info_list = []

    for y in range(0, height, cell_size_y):
        for x in range(0, width, cell_size_x):
            cell_data = image_data[y:y + cell_size_y, x:x + cell_size_x]
            cell_name = f"{chr(x // cell_size_x + 97)}{y // cell_size_y + 1}"
            cell_info = {
                'name': cell_name,
                'x': x,
                'y': y,
                'data': cell_data.tolist()
            }
            cell_info_list.append(cell_info)

    return cell_info_list

def calculate_contrast(cell_info_list):
    for cell_info in cell_info_list:
        cell_data = np.asarray(cell_info['data'], dtype=np.float32)
        cell_data = cell_data[np.isfinite(cell_data)]
        contrast_metric = np.std(cell_data)
        cell_info['contrast_metric'] = contrast_metric

    return cell_info_list

def get_cells(cell_info_list, N=5):
    cell_info_list.sort(key=lambda x: x['contrast_metric'], reverse=True)
    return cell_info_list[:N]